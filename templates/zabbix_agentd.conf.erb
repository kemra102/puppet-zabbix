# HEADER: This file was autogenerated at <%= Time.now() %> by puppet.
# HEADER: While it can still be managed manually, it is definitely not recommended.
# HEADER: Note particularly that the comments starting with 'Puppet Name' should
# HEADER: not be deleted, as doing so could cause duplicate cron jobs.

# This is a config file for the Zabbix agent daemon (Unix)
# To get more information about Zabbix, visit http://www.zabbix.com

############ GENERAL PARAMETERS #################

### Option: PidFile
#       Name of PID file.
#
# Mandatory: no
# Default:
PidFile=<%= scope.lookupvar('::zabbix::params::client_pidfile') %>

### Option: LogFile
#       Name of log file.
#       If not set, syslog is used.
#
# Mandatory: no
# Default:
LogFile=<%= scope.lookupvar('::zabbix::params::client_logfile') %>

### Option: LogFileSize
#       Maximum size of log file in MB.
#       0 - disable automatic log rotation.
#
# Mandatory: no
# Range: 0-1024
# Default:
# LogFileSize=1
<% if scope.lookupvar('::zabbix::params::client_logfilesize') != '' %>
LogFileSize=<%= scope.lookupvar('::zabbix::params::client_logfilesize') %>
<% end %>

### Option: DebugLevel
#       Specifies debug level
#       0 - no debug
#       1 - critical information
#       2 - error information
#       3 - warnings
#       4 - for debugging (produces lots of information)
#
# Mandatory: no
# Range: 0-4
# Default:
# DebugLevel=3
<% if scope.lookupvar('::zabbix::params::client_debuglevel') != '' %>
DebugLevel=<%= scope.lookupvar('::zabbix::params::client_debuglevel') %>
<% end %>

### Option: SourceIP
#       Source IP address for outgoing connections.
#
# Mandatory: no
# Default:
<% if scope.lookupvar('::zabbix::params::client_sourceip') != '' %>
SourceIP=<%= scope.lookupvar('::zabbix::params::client_sourceip') %>
<% end %>

### Option: EnableRemoteCommands
#       Whether remote commands from Zabbix server are allowed.
#       0 - not allowed
#       1 - allowed
#
# Mandatory: no
# Default:
# EnableRemoteCommands=0
<% if scope.lookupvar('::zabbix::params::client_enableremotecommands') != '' %>
EnableRemoteCommands=<%= scope.lookupvar('::zabbix::params::client_enableremotecommands') %>
<% end %>

### Option: LogRemoteCommands
#       Enable logging of executed shell commands as warnings.
#       0 - disabled
#       1 - enabled
#
# Mandatory: no
# Default:
# LogRemoteCommands=0
<% if scope.lookupvar('::zabbix::params::client_logremotecommands') != '' %>
LogRemoteCommands=<%= scope.lookupvar('::zabbix::params::client_logremotecommands') %>
<% end %>

##### Passive checks related

### Option: Server
#       List of comma delimited IP addresses (or hostnames) of Zabbix servers.
#       Incoming connections will be accepted only from the hosts listed here.
#       No spaces allowed.
#       If IPv6 support is enabled then '127.0.0.1', '::127.0.0.1', '::ffff:127.0.0.1' are treated equally.
#
# Mandatory: no
# Default:
<% if scope.lookupvar('::zabbix::params::client_server') != '' %>
Server=<%= scope.lookupvar('::zabbix::params::client_server') %>
<% end %>

### Option: ListenPort
#       Agent will listen on this port for connections from the server.
#
# Mandatory: no
# Range: 1024-32767
# Default:
ListenPort=<%= scope.lookupvar('::zabbix::params::client_listenport') %>

### Option: ListenIP
#       List of comma delimited IP addresses that the agent should listen on.
#       First IP address is sent to Zabbix server if connecting to it to retrieve list of active checks.
#
# Mandatory: no
# Default:
<% if scope.lookupvar('::zabbix::params::client_listenip') != '' %>
ListenIP=<%= scope.lookupvar('::zabbix::params::client_listenip') %>
<% end %>

### Option: StartAgents
#       Number of pre-forked instances of zabbix_agentd that process passive checks.
#       If set to 0, disables passive checks and the agent will not listen on any TCP port.
#
# Mandatory: no
# Range: 0-100
# Default:
# StartAgents=3
<% if scope.lookupvar('::zabbix::params::client_startagents') != '' %>
StartAgents=<%= scope.lookupvar('::zabbix::params::client_startagents') %>
<% end %>

##### Active checks related

### Option: ServerActive
#       List of comma delimited IP:port (or hostname:port) pairs of Zabbix servers for active checks.
#       If port is not specified, default port is used.
#       IPv6 addresses must be enclosed in square brackets if port for that host is specified.
#       If port is not specified, square brackets for IPv6 addresses are optional.
#       If this parameter is not specified, active checks are disabled.
#       Example: ServerActive=127.0.0.1:20051,zabbix.domain,[::1]:30051,::1,[12fc::1]
#
# Mandatory: no
# Default:
<% if scope.lookupvar('::zabbix::params::client_serveractive') != '' %>
ServerActive=<%= scope.lookupvar('::zabbix::params::client_serveractive') %>
<% end %>

### Option: Hostname
#       Unique, case sensitive hostname.
#       Required for active checks and must match hostname as configured on the server.
#       Value is acquired from HostnameItem if undefined.
#
# Mandatory: no
# Default:
<% if scope.lookupvar('::zabbix::params::client_hostname') != '' %>
Hostname=<%= scope.lookupvar('::zabbix::params::client_hostname') %>
<% end %>

### Option: HostnameItem
#       Item used for generating Hostname if it is undefined.
#       Ignored if Hostname is defined.
#
# Mandatory: no
# Default:
# HostnameItem=system.hostname
<% if scope.lookupvar('::zabbix::params::client_hostnameitem') != '' %>
HostnameItem=<%= scope.lookupvar('::zabbix::params::client_hostnameitem') %>
<% end %>

### Option: RefreshActiveChecks
#       How often list of active checks is refreshed, in seconds.
#
# Mandatory: no
# Range: 60-3600
# Default:
# RefreshActiveChecks=120
<% if scope.lookupvar('::zabbix::params::client_refreshactivechecks') != '' %>
RefreshActiveChecks=<%= scope.lookupvar('::zabbix::params::client_refreshactivechecks') %>
<% end %>

### Option: BufferSend
#       Do not keep data longer than N seconds in buffer.
#
# Mandatory: no
# Range: 1-3600
# Default:
# BufferSend=5
<% if scope.lookupvar('::zabbix::params::client_buffersend') != '' %>
BufferSend=<%= scope.lookupvar('::zabbix::params::client_buffersend') %>
<% end %>

### Option: BufferSize
#       Maximum number of values in a memory buffer. The agent will send
#       all collected data to Zabbix Server or Proxy if the buffer is full.
#
# Mandatory: no
# Range: 2-65535
# Default:
# BufferSize=100
<% if scope.lookupvar('::zabbix::params::client_buffersize') != '' %>
BufferSize=<%= scope.lookupvar('::zabbix::params::client_buffersize') %>
<% end %>

### Option: MaxLinesPerSecond
#       Maximum number of new lines the agent will send per second to Zabbix Server
#       or Proxy processing 'log' and 'logrt' active checks.
#       The provided value will be overridden by the parameter 'maxlines',
#       provided in 'log' or 'logrt' item keys.
#
# Mandatory: no
# Range: 1-1000
# Default:
# MaxLinesPerSecond=100
<% if scope.lookupvar('::zabbix::params::client_maxlinespersecond') != '' %>
MaxLinesPerSecond=<%= scope.lookupvar('::zabbix::params::client_maxlinespersecond') %>
<% end %>

### Option: AllowRoot
#       Allow the agent to run as 'root'. If disabled and the agent is started by 'root', the agent
#       will try to switch to user 'zabbix' instead. Has no effect if started under a regular user.
#       0 - do not allow
#       1 - allow
#
# Mandatory: no
# Default:
# AllowRoot=0
<% if scope.lookupvar('::zabbix::params::client_allowroot') != '' %>
AllowRoot=<%= scope.lookupvar('::zabbix::params::client_allowroot') %>
<% end %>

############ ADVANCED PARAMETERS #################

### Option: Alias
#       Sets an alias for parameter. It can be useful to substitute long and complex parameter name with a smaller and simpler one.
#
# Mandatory: no
# Range:
# Default:
<% if scope.lookupvar('::zabbix::params::client_alias') != '' %>
Alias=<%= scope.lookupvar('::zabbix::params::client_alias') %>
<% end %>

### Option: Timeout
#       Spend no more than Timeout seconds on processing
#
# Mandatory: no
# Range: 1-30
# Default:
# Timeout=3
<% if scope.lookupvar('::zabbix::params::client_timeout') != '' %>
Timeout=<%= scope.lookupvar('::zabbix::params::client_timeout') %>
<% end %>

### Option: Include
#       You may include individual files or all files in a directory in the configuration file.
#       Installing Zabbix will create include directory in /usr/local/etc, unless modified during the compile time.
#
# Mandatory: no
# Default:
Include=<%= scope.lookupvar('::zabbix::params::client_include') %>

####### USER-DEFINED MONITORED PARAMETERS #######

### Option: UnsafeUserParameters
#       Allow all characters to be passed in arguments to user-defined parameters.
#       0 - do not allow
#       1 - allow
#
# Mandatory: no
# Range: 0-1
# Default:
# UnsafeUserParameters=0
<% if scope.lookupvar('::zabbix::params::client_unsafeuserparameters') != '' %>
UnsafeUserParameters=<%= scope.lookupvar('::zabbix::params::client_unsafeuserparameters') %>
<% end %>

### Option: UserParameter
#       User-defined parameter to monitor. There can be several user-defined parameters.
#       Format: UserParameter=<key>,<shell command>
#       See 'zabbix_agentd' directory for examples.
#
# Mandatory: no
# Default:
# UserParameter=
<% if scope.lookupvar('::zabbix::params::client_userparameter') != '' %>
UserParameter=<%= scope.lookupvar('::zabbix::params::client_userparameter') %>
<% end %>
